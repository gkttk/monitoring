scalar LocalDateTime

type Query {
    users: [User!]!
    userById(id: ID!): User
    configurations: [Configuration!]!
    notifications(filter: NotificationFilter): [Notification!]!
    auth(authRequest: AuthRequest): AuthData
    validate(data: InputAuthData): AuthData
}

type Mutation {
    updateConfiguration(id: ID!, newValue: String!): Configuration!
    createNotification(notification: NotificationRequest) : Notification
}

input AuthRequest {
    login: String!
    password: String!
}

input InputAuthData {
    login: String!
    admin: Boolean!,
    token: String!
}

input NotificationFilter {
    componentId: ID
    severity: Severity
}

input NotificationRequest{
    componentName: String!,
    description: String!,
    severity: Severity!
}

type User {
    id: ID!
    login: String!
}

type Configuration {
    id: ID!
    key: String!
    value: String!
}

type Notification {
    id: ID!
    componentName: String!,
    description: String!,
    severity: Severity!
    timestamp: LocalDateTime
}

type AuthData {
    login: String!
    admin: Boolean!,
    token: String!
}


enum Severity{
    INFO
    WARNING
    ERROR
}